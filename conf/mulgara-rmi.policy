// Mulgara security policy
// To enable the MulgaraUnsafeFunctionResolver add the following permission:
//   permission java.io.FilePermission "<<ALL FILES>>", "execute";

grant 
{
  permission java.io.FilePermission "<<ALL FILES>>", "read, write, delete";
  permission java.lang.RuntimePermission "modifyThread";
  permission java.lang.RuntimePermission "modifyThreadGroup";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.server";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.transport";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "getClassLoader";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "shutdownHooks";
  permission java.lang.RuntimePermission "setIO";
  permission java.lang.RuntimePermission "exitVM";
  permission java.lang.RuntimePermission "loadLibrary.keychain";
  permission java.lang.management.ManagementPermission "monitor";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.net.SocketPermission "*:80", "listen,accept,connect,resolve";
  permission java.net.SocketPermission "*:443", "connect,resolve";
  permission java.net.SocketPermission "*:1099", "connect,resolve";
  permission java.net.SocketPermission "*:8080", "listen,accept,connect,resolve";
  permission java.net.SocketPermission "*:1024-", "accept,connect,resolve";
  permission java.net.SocketPermission "224.0.0.251", "connect,accept,resolve";
  permission java.security.SecurityPermission "getPolicy";
  permission java.security.SecurityPermission "setPolicy";
  permission java.util.PropertyPermission "org.mulgara.xml.ResourceDocumentBuilderFactory", "write";
  permission java.util.PropertyPermission "java.io.tmpdir", "write";
  permission java.util.PropertyPermission "java.naming.factory.initial", "write";
  permission java.util.PropertyPermission "java.naming.provider.url", "write";
  permission java.util.PropertyPermission "java.rmi.server.codebase", "write";
  permission java.util.PropertyPermission "java.security.policy", "write";
  permission java.util.PropertyPermission "mail.smtp.host", "write";
  permission java.util.PropertyPermission "triple.store.implementation", "write";
  permission java.util.PropertyPermission "descriptor.model", "write";
  permission java.util.PropertyPermission "*", "read";
  permission java.util.logging.LoggingPermission "control";
  permission javax.security.auth.AuthPermission "createLoginContext.mulgara";
  permission javax.security.auth.AuthPermission "doAsPrivileged";
  permission javax.security.auth.AuthPermission "modifyPrincipals";
};

// Only JOTM's Carol component needs these permissions
grant
{
  permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.server";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.transport";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.util.PropertyPermission "*", "read, write";
};
